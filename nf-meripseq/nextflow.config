/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    nf/meripseq Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // TODO nf-core: Specify your pipeline's command line flags
    // Input options
    input                       = null
    read_length                 = 150

    // References
    //fasta                       = null
    //gtf                         = null
    genome                      = null
    igenomes_base               = 's3://ngi-igenomes/igenomes/'
    igenomes_ignore             = false
    star_index                  = null
    rsem_index                  = null
    macs_gsize                  = null
    bsgenome                    = null
    transcript_fasta            = null
    save_reference              = true

    // Custume image for exomepeak2
    singularity_image_path      = 'https://nigms-sandbox2-merip.s3.us-east-1.amazonaws.com/exomepeak2.sif' 
    docker_image_path           = 'docker.io/yqinuh/exomepeak2:1.0'

    // MultiQC options
    multiqc_config              = null
    multiqc_title               = null
    multiqc_logo                = null
    max_multiqc_email_size      = '25.MB'
    multiqc_methods_description = null

    // Trimming 
    min_trimmed_reads           = 10000
    save_trimmed                = true

    // Ribosomal RNA removal
    // remove_ribo_rna            = true
    // ribo_database_manifest     = "${projectDir}/assets/rrna-db-defaults.txt"

    // Alignment 
    aligner                     = "star"
    save_align_intermeds        = false
    save_unaligned              = false
    contaminant_screening       = false
    extra_star_align_args       = null
    skip_alignment              = false
    star_ignore_sjdbgtf         = false
    seq_center                  = null

    //QC
    skip_fastqc                 = false
    skip_qc                     = false
    skip_deseq2_qc              = false
    skip_trimming               = false

    //DESEQ2-QC
    deseq2_vst                  = true

    // Peak calling
    narrow_peak                 = true
    skip_peak_annotation        = false
    skip_peak_qc                = false
    skip_consensus_peaks        = false
    skip_differential_peaks     = false
    skip_exomepeak2_single      = false
    skip_exomepeak2_consensus   = false
    skip_exomepeak2             = false
    min_reps_consensus          = 1

    // Boilerplate options
    outdir                       = null
    publish_dir_mode             = 'copy'
    email                        = null
    email_on_fail                = null
    plaintext_email              = false
    monochrome_logs              = false
    hook_url                     = null
    help                         = false
    help_full                    = false
    show_hidden                  = false
    version                      = false
    pipelines_testdata_base_path = 'https://raw.githubusercontent.com/nf-core/test-datasets/'
    trace_report_suffix          = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')// Config options
    config_profile_name          = null
    config_profile_description   = null

    custom_config_version        = 'master'
    custom_config_base           = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_contact       = null
    config_profile_url           = null

    // Schema validation default options
    validate_params              = true

    bsgenomes = [
        'hg38':     'BSgenome.Hsapiens.UCSC.hg38',        // Human (Homo sapiens), UCSC hg38
        'GRCh38':   'BSgenome.Hsapiens.NCBI.GRCh38',      // Human, Ensembl/NCBI GRCh38 
        'hg19':     'BSgenome.Hsapiens.UCSC.hg19',        // Human (Homo sapiens), UCSC hg19
        'GRCh37':   'BSgenome.Hsapiens.UCSC.hg19',        // Human, Ensembl/NCBI GRCh37 (maps to UCSC hg19 BSgenome)
        'mm10':     'BSgenome.Mmusculus.UCSC.mm10',       // Mouse (Mus musculus), UCSC mm10
        'GRCm38':   'BSgenome.Mmusculus.UCSC.mm10',       // Mouse, Ensembl/NCBI GRCm38 (maps to UCSC mm10 BSgenome)
        'bosTau8':  'BSgenome.Btaurus.UCSC.bosTau8',      // Cow (Bos taurus), UCSC bosTau8
        'ce10':     'BSgenome.Celegans.UCSC.ce10',        // Worm (Caenorhabditis elegans), UCSC ce10
        'canFam3':  'BSgenome.Cfamiliaris.UCSC.canFam3',  // Dog (Canis familiaris), UCSC canFam3
        'danRer10': 'BSgenome.Drerio.UCSC.danRer10',      // Zebrafish (Danio rerio), UCSC danRer10
        'dm6':      'BSgenome.Dmelanogaster.UCSC.dm6',    // Fruit fly (Drosophila melanogaster), UCSC dm6
        'equCab2':  'BSgenome.Ecaballus.UCSC.equCab2',    // Horse (Equus caballus), UCSC equCab2
        'galGal4':  'BSgenome.Ggallus.UCSC.galGal4',      // Chicken (Gallus gallus), UCSC galGal4
        'panTro4':  'BSgenome.Ptroglodytes.UCSC.panTro4', // Chimpanzee (Pan troglodytes), UCSC panTro4
        'rn6':      'BSgenome.Rnorvegicus.UCSC.rn6',      // Rat (Rattus norvegicus), UCSC rn6
        'sacCer3':  'BSgenome.Scerevisiae.UCSC.sacCer3',  // Yeast (Saccharomyces cerevisiae), UCSC sacCer3
        'susScr3':  'BSgenome.Sscrofa.UCSC.susScr3'       // Pig (Sus scrofa), UCSC susScr3
    ]
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {
    debug {
        dumpHashes              = true
        process.beforeScript    = 'echo $HOSTNAME'
        cleanup                 = false
        nextflow.enable.configProcessNamesValidation = true
    }
    conda {
        conda.enabled           = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        conda.channels          = ['conda-forge', 'bioconda']
        apptainer.enabled       = false
    }
    mamba {
        conda.enabled           = true
        conda.useMamba          = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    docker {
        docker.enabled          = true
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '-u $(id -u):$(id -g)'
    }
    arm {
        docker.runOptions       = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled     = true
        singularity.autoMounts  = true
        conda.enabled           = false
        docker.enabled          = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    podman {
        podman.enabled          = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    shifter {
        shifter.enabled         = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    charliecloud {
        charliecloud.enabled    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        apptainer.enabled       = false
    }
    apptainer {
        apptainer.enabled       = true
        apptainer.autoMounts    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
    }
    wave {
        apptainer.ociAutoPull   = true
        singularity.ociAutoPull = true
        wave.enabled            = true
        wave.freeze             = true
        wave.strategy           = 'conda,container'
    }
    gitpod {
        executor.name           = 'local'
        executor.cpus           = 4
        executor.memory         = 8.GB
        process {
            resourceLimits = [
                memory: 8.GB,
                cpus  : 4,
                time  : 1.h
            ]
        }
    }
    test      { includeConfig 'conf/test.config'      }
    test_full { includeConfig 'conf/test_full.config' }
}

// Load nf-core custom profiles from different Institutions
includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/nfcore_custom.config" : "/dev/null"

// Load nf/meripseq custom profiles from different institutions.
// TODO nf-core: Optionally, you can add a pipeline-specific nf-core config at https://github.com/nf-core/configs
// includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/pipeline/meripseq.config" : "/dev/null"

// Set default registry for Apptainer, Docker, Podman, Charliecloud and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Charliecloud / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry    = 'quay.io'
docker.registry       = 'quay.io'
podman.registry       = 'quay.io'
singularity.registry  = 'quay.io'
charliecloud.registry = 'quay.io'

// Load igenomes.config if required
includeConfig !params.igenomes_ignore ? 'conf/igenomes.config' : 'conf/igenomes_ignored.config'

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Set bash options
process.shell = [
    "bash",
    "-C",         // No clobber - prevent output redirection from overwriting files.
    "-e",         // Exit if a tool returns a non-zero status/exit code
    "-u",         // Treat unset variables and parameters as an error
    "-o",         // Returns the status of the last command to exit..
    "pipefail"    //   ..with a non-zero status or zero if all successfully execute
]

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${params.trace_report_suffix}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${params.trace_report_suffix}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${params.trace_report_suffix}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${params.trace_report_suffix}.html"
}

manifest {
    name            = 'nf/meripseq'
    author          = """Yujia Qin""" // The author field is deprecated from Nextflow version 24.10.0, use contributors instead
    contributors    = [
        // TODO nf-core: Update the field with the details of the contributors to your pipeline. New with Nextflow version 24.10.0
        [
            name: 'Yujia Qin',
            affiliation: '',
            email: '',
            github: '',
            contribution: [], // List of contribution types ('author', 'maintainer' or 'contributor')
            orcid: ''
        ],
    ]
    homePage        = 'https://github.com/nf/meripseq'
    description     = """Data analysis pipeline for MeRIPseq """
    mainScript      = 'main.nf'
    defaultBranch   = 'master'
    nextflowVersion = '!>=24.04.2'
    version         = '1.0.0dev'
    doi             = ''
}

// Nextflow plugins
plugins {
    id 'nf-schema@2.3.0' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

validation {
    defaultIgnoreParams = ["genomes"]
    monochromeLogs = params.monochrome_logs
    help {
        enabled = true
        command = "nextflow run nf/meripseq -profile <docker/singularity/.../institute> --input samplesheet.csv --outdir <OUTDIR>"
        fullParameter = "help_full"
        showHiddenParameter = "show_hidden"
    }
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'
includeConfig "subworkflows/local/align_star/nextflow.config"
includeConfig "subworkflows/nf-core/fastq_subsample_fq_salmon/nextflow.config"
