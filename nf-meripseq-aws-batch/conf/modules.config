/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: STAR_ALIGN {
        ext.args = '--readFilesCommand zcat --outFilterMultimapNmax 10 --outFilterMismatchNmax 2'
    }


        withName: 'MACS3_CALLPEAK' {
            ext.args   = [
                '--keep-dup all',
                '--qvalue 0.01',
                '--format BAM',
                '--nomodel'
            ].join(' ').trim()
            publishDir = [
                path: { "${params.outdir}/${params.aligner}/merged_library/macs3" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }
    
        withName: 'FRIP_SCORE' {
            ext.args   = '-bed -c -f 0.20'
            publishDir = [
                path: { "${params.outdir}/${params.aligner}/merged_library/macs3/qc" },
                enabled: false
            ]
        }
    
        withName: 'MULTIQC_CUSTOM_PEAKS' {
            publishDir = [
                path: { "${params.outdir}/${params.aligner}/merged_library/macs3/qc" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }
}

if (!params.skip_peak_annotation) {
    process {
        withName: '.*:PEAKS_CALL_MACS3_HOMER:HOMER_ANNOTATEPEAKS' {
            ext.args   = '-gid'
            ext.prefix = { "${meta.id}_peaks" }
            publishDir = [
                path: { "${params.outdir}/${params.aligner}/merged_library/macs3" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }
    }

    if (!params.skip_peak_qc) {
        process {
            withName: 'PLOT_MACS3_QC' {
                ext.args   = '-o ./ -p macs3_peak'
                publishDir = [
                    path: { "${params.outdir}/${params.aligner}/merged_library/macs3/qc" },
                    mode: params.publish_dir_mode,
                    saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
                ]
            }

            withName: 'PLOT_HOMER_ANNOTATEPEAKS' {
                ext.args   = '-o ./'
                ext.prefix = 'macs3_annotatePeaks'
                publishDir = [
                    path: { "${params.outdir}/${params.aligner}/merged_library/macs3/qc" },
                    mode: params.publish_dir_mode,
                    saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
                ]
            }
        }
    }
}

if (!params.skip_consensus_peaks) {
    process {
        withName: 'MACS3_CONSENSUS' {
            ext.when   = { meta.multiple_groups || meta.replicates_exist }
            ext.prefix = { "${meta.id}.consensus_peaks" }
            publishDir = [
                path: { "${params.outdir}" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }

        withName: 'SUBREAD_FEATURECOUNTS'  {
            ext.args   = '-F SAF -O --fracOverlap 0.2'
            ext.prefix = { "${meta.id}.consensus_peaks" }
            publishDir = [
                path: { "${params.outdir}" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }
    }

    if (!params.skip_peak_annotation) {
        process {
            withName: '.*:BED_CONSENSUS_MACS3:HOMER_ANNOTATEPEAKS' {
                ext.args   = '-gid'
                ext.prefix = { "${meta.id}.consensus_peaks" }
                publishDir = [
                    path: { "${params.outdir}" },
                    mode: params.publish_dir_mode,
                    saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
                ]
            }

            withName: 'ANNOTATE_BOOLEAN_PEAKS' {
                ext.prefix = { "${meta.id}.consensus_peaks" }
                publishDir = [
                    path: { "${params.outdir}/${params.aligner}/merged_library/macs3/${params.narrow_peak ? 'narrow_peak' : 'broad_peak'}/consensus/${meta.id}" },
                    mode: params.publish_dir_mode,
                    saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
                ]
            }
        }
    }

    if (!params.skip_deseq2_qc) {
        process {
            withName: 'DESEQ2_QC' {
                ext.when   = { meta.multiple_groups && meta.replicates_exist }
                ext.args   = [
                    '--id_col 1',
                    '--sample_suffix \'.mLb.clN.sorted.bam\'',
                    '--count_col 7',
                    params.deseq2_vst ? '--vst TRUE' : ''
                ].join(' ').trim()
                ext.prefix = { "${meta.id}.consensus_peaks" }
                publishDir = [
                    path: { "${params.outdir}/${params.aligner}/merged_library/macs3/${params.narrow_peak ? 'narrow_peak' : 'broad_peak'}/consensus/${meta.id}/deseq2" },
                    mode: params.publish_dir_mode,
                    saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
                ]
            }
        }
    }
}


